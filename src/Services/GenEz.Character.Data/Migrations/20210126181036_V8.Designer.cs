// <auto-generated />
using System;
using GenEz.Character.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenEz.Character.Data.Migrations
{
    [DbContext(typeof(CharacterDbContext))]
    [Migration("20210126181036_V8")]
    partial class V8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GenEz.Character.Domain.Entities.NameOrigin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NeutralName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tb_name_origin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be0c73e9-2710-4676-9478-ee36a9e6f96e"),
                            Name = "African",
                            NeutralName = "AFRICAN"
                        },
                        new
                        {
                            Id = new Guid("f7a540bd-ddc7-421d-a879-0e7974a5633b"),
                            Name = "Arabic",
                            NeutralName = "ARABIC"
                        },
                        new
                        {
                            Id = new Guid("732c6a1b-ef2d-4471-acf8-3f9033ef5d57"),
                            Name = "Biblical",
                            NeutralName = "BIBLICAL"
                        },
                        new
                        {
                            Id = new Guid("81f4bb6e-3c6d-4ee4-a7c6-4f18be3dd478"),
                            Name = "Celtic",
                            NeutralName = "CELTIC"
                        },
                        new
                        {
                            Id = new Guid("e376ea1a-0f28-4f67-809a-a78bcc0a7183"),
                            Name = "Chinese",
                            NeutralName = "CHINESE"
                        },
                        new
                        {
                            Id = new Guid("838c1be0-06b0-48ac-9268-c69072280f90"),
                            Name = "French",
                            NeutralName = "FRENCH"
                        },
                        new
                        {
                            Id = new Guid("208ed58e-d875-473a-a67e-3dc3e034c783"),
                            Name = "Gaelic",
                            NeutralName = "GAELIC"
                        },
                        new
                        {
                            Id = new Guid("eb47fd93-662f-45a8-b6f4-fe63400d0c3d"),
                            Name = "German",
                            NeutralName = "GERMAN"
                        },
                        new
                        {
                            Id = new Guid("0c101315-5611-4967-acb0-27e124d5de1c"),
                            Name = "Greek",
                            NeutralName = "GREEK"
                        },
                        new
                        {
                            Id = new Guid("6408b9ea-d64f-4f22-9045-133788ecb4b6"),
                            Name = "Hawaiian",
                            NeutralName = "HAWAIIAN"
                        },
                        new
                        {
                            Id = new Guid("24ecc259-89e2-4b20-b1f5-7890a5e4e820"),
                            Name = "Hebrew",
                            NeutralName = "HEBREW"
                        },
                        new
                        {
                            Id = new Guid("ee7088e9-706b-49c6-8468-ed57ddfaed12"),
                            Name = "Hindu",
                            NeutralName = "HINDU"
                        },
                        new
                        {
                            Id = new Guid("4455ea44-e256-4f38-b120-5da91007aef6"),
                            Name = "Italian",
                            NeutralName = "ITALIAN"
                        },
                        new
                        {
                            Id = new Guid("bc3d3311-4353-4fe7-85f8-e9816ca2e80a"),
                            Name = "Japanese",
                            NeutralName = "JAPANESE"
                        },
                        new
                        {
                            Id = new Guid("fcb12666-b2f2-4a00-a9e8-0b48e46653cd"),
                            Name = "Latin",
                            NeutralName = "LATIN"
                        },
                        new
                        {
                            Id = new Guid("9da6842e-8f89-4a04-a187-973bef4f0d45"),
                            Name = "Portuguese",
                            NeutralName = "PORTUGUESE"
                        },
                        new
                        {
                            Id = new Guid("609c53b7-968c-46b0-b231-01e0ddc6a351"),
                            Name = "Russian",
                            NeutralName = "RUSSIAN"
                        });
                });

            modelBuilder.Entity("GenEz.Character.Domain.Entities.Nickname", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tb_nickname");
                });

            modelBuilder.Entity("GenEz.Character.Domain.Entities.PersonName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFemale")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstName")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSurname")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("tb_person_name");
                });

            modelBuilder.Entity("GenEz.Character.Domain.Entities.Spelling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NeutralText")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid?>("PersonNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("PersonNameId");

                    b.HasIndex("Text")
                        .IsUnique();

                    b.ToTable("tb_spelling");
                });

            modelBuilder.Entity("NameOriginPersonName", b =>
                {
                    b.Property<Guid>("NameOriginsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonNamesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NameOriginsId", "PersonNamesId");

                    b.HasIndex("PersonNamesId");

                    b.ToTable("tb_person_name_origin");
                });

            modelBuilder.Entity("NicknamePersonName", b =>
                {
                    b.Property<Guid>("NicknamesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonNamesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NicknamesId", "PersonNamesId");

                    b.HasIndex("PersonNamesId");

                    b.ToTable("tb_person_name_nickname");
                });

            modelBuilder.Entity("PersonNamePersonName", b =>
                {
                    b.Property<Guid>("RelatedPersonNamesFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RelatedPersonNamesToId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RelatedPersonNamesFromId", "RelatedPersonNamesToId");

                    b.HasIndex("RelatedPersonNamesToId");

                    b.ToTable("tb_related_person_name");
                });

            modelBuilder.Entity("GenEz.Character.Domain.Entities.Spelling", b =>
                {
                    b.HasOne("GenEz.Character.Domain.Entities.PersonName", "PersonName")
                        .WithMany("Spellings")
                        .HasForeignKey("PersonNameId");

                    b.Navigation("PersonName");
                });

            modelBuilder.Entity("NameOriginPersonName", b =>
                {
                    b.HasOne("GenEz.Character.Domain.Entities.NameOrigin", null)
                        .WithMany()
                        .HasForeignKey("NameOriginsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenEz.Character.Domain.Entities.PersonName", null)
                        .WithMany()
                        .HasForeignKey("PersonNamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NicknamePersonName", b =>
                {
                    b.HasOne("GenEz.Character.Domain.Entities.Nickname", null)
                        .WithMany()
                        .HasForeignKey("NicknamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenEz.Character.Domain.Entities.PersonName", null)
                        .WithMany()
                        .HasForeignKey("PersonNamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonNamePersonName", b =>
                {
                    b.HasOne("GenEz.Character.Domain.Entities.PersonName", null)
                        .WithMany()
                        .HasForeignKey("RelatedPersonNamesFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenEz.Character.Domain.Entities.PersonName", null)
                        .WithMany()
                        .HasForeignKey("RelatedPersonNamesToId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenEz.Character.Domain.Entities.PersonName", b =>
                {
                    b.Navigation("Spellings");
                });
#pragma warning restore 612, 618
        }
    }
}
